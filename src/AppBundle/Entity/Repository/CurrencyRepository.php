<?php

namespace AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Config\Definition\Exception\Exception;

/**
 * CurrencyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CurrencyRepository extends EntityRepository
{
    /**
     * @param $currencyName
     */
    public function getCurrencyCoefficientByName($currencyName = null)
    {


        $currencyList = $this->makeApiCall();

        dump($currencyList);
        die;
    }

    /**
     * @return mixed
     */
    public function makeApiCall()
    {
        $service_url = "https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=11";
        $res = json_decode(file_get_contents($service_url));
        return $res;
    }

    /**
     * @param $currencyList
     * @return bool
     */
    public function updateCurrentRate($currencyList)
    {
            foreach ($currencyList as $key => $currency) {
                $currencyId = $key + 1;
                $sql = "UPDATE `current_rate`
                        SET `buy_rate` = {$currency['buy']}, `sale_rate` = {$currency['sale']}
                        WHERE `currency_id` = {$currencyId}
                        ";

                $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
                $stmt->execute();

                if (!$stmt) {
                    throw new Exception('DB error!');
                }

            }

        return true;
    }


    /**
     *
     */
    public function getRateUpdateDate()
    {
        $sql = "SELECT creation_date
                FROM rate
                ORDER BY id DESC
                    LIMIT 1
                ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
        $stmt->execute();
        $date = $stmt->fetchColumn();
        return ($date);
    }


}